START =>PROG
START =>/e/ REPTPROG0  /progSubtree/
START =>/e/ STRUCTORIMPLORFUNC REPTPROG0  /progSubtree/
START =>/e/ /e/ FUNCDEF   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ FUNCHEAD FUNCBODY   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/ FPARAMS /fparmListSubtree/ ) -> RETURNTYPE FUNCBODY   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> RETURNTYPE FUNCBODY   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ FUNCBODY   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ VARDECLORSTAT REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ STATEMENT REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ STATEMENTIDNEST ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ INDICE REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ ARITHEXPR ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ TERM RIGHTRECARITHEXPR ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ FACTOR RIGHTRECTERM RIGHTRECARITHEXPR ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/ RIGHTRECTERM RIGHTRECARITHEXPR ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/  RIGHTRECARITHEXPR ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ STATEMENTIDNEST ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ INDICE REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ ARITHEXPR ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ TERM RIGHTRECARITHEXPR ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ FACTOR RIGHTRECTERM RIGHTRECARITHEXPR ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/ RIGHTRECTERM RIGHTRECARITHEXPR ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/  RIGHTRECARITHEXPR ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ] REPTIDNEST1 /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ STATEMENTIDNEST3 ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ ASSIGNOP EXPR /assignSubtree/ ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ = EXPR /assignSubtree/ ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ = ARITHEXPR EXPR2 /assignSubtree/ ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ = TERM RIGHTRECARITHEXPR EXPR2 /assignSubtree/ ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ = FACTOR RIGHTRECTERM RIGHTRECARITHEXPR EXPR2 /assignSubtree/ ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ = /e/ intnum /numNode/ /factorSubtree/ RIGHTRECTERM RIGHTRECARITHEXPR EXPR2 /assignSubtree/ ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ = /e/ intnum /numNode/ /factorSubtree/  RIGHTRECARITHEXPR EXPR2 /assignSubtree/ ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ = /e/ intnum /numNode/ /factorSubtree/   EXPR2 /assignSubtree/ ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ = /e/ intnum /numNode/ /factorSubtree/    /assignSubtree/ ; REPTFUNCBODY1 /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ = /e/ intnum /numNode/ /factorSubtree/    /assignSubtree/ ;  /funcBodySubtree/ }   /funcDefSubtree/ REPTPROG0  /progSubtree/
START =>/e/ /e/ func id /IdNode/ ( /e/  /fparmListSubtree/ ) -> void  /typeNode/ { /e/ id  /IdNode/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ . id  /IdNode/ /dotSubtree/ /e/ [ /e/ intnum /numNode/ /factorSubtree/   ]  /indiceListSubtree/  /varSubtree/ = /e/ intnum /numNode/ /factorSubtree/    /assignSubtree/ ;  /funcBodySubtree/ }   /funcDefSubtree/   /progSubtree/
